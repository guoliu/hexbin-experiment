<html>
<head>
<link rel="stylesheet" href="nouislider.min.css">
</head>
<body>
<style>

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.hexagon {
  fill: none;
  stroke: #000;
  stroke-width: .5px;
}

.sliders {
  margin: 10px;
  display: inline-block;
  width: 200px;
  height: 20px;
}

</style>

<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="d3.hexbin.min.js"></script>
<script src="slider.js"></script>
<script type="text/javascript" src="http://code.jquery.com/jquery-1.7.2.min.js"></script>
<script type="text/javascript" src="nouislider.min.js"></script>

<div class='sliders'>
  <div id='nSlider'></div>
  <div id='nSlider-value'></div>
</div>

<div class='sliders'>
  <div id='radSlider'></div>
  <div id='radSlider-value'></div>
</div>

<div class='sliders'>
  <div id='alphaSlider'></div>
  <div id='alphaSlider-value'></div>
</div>

<div id='hex'></div>
<div id='scatter'></div>

<script>


var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

nSlider = document.getElementById('nSlider')
noUiSlider.create(nSlider, {
    start: [2000],
    range: {
      'min': [100],
      'max': [10000]
    }
  });
nSlider.noUiSlider.on('slide', update);
var nSliderValueElement = document.getElementById('nSlider-value');
nSlider.noUiSlider.on('update', function( values, handle ) {
  nSliderValueElement.innerHTML = 'n: '+values[handle];
});


radSlider = document.getElementById('radSlider')
noUiSlider.create(radSlider, {
    start: [20],
    range: {
      'min': [2],
      'max': [100]
    }
  });
radSlider.noUiSlider.on('slide', update);
var radSliderValueElement = document.getElementById('radSlider-value');
radSlider.noUiSlider.on('update', function( values, handle ) {
  radSliderValueElement.innerHTML = 'radius: '+values[handle];
});


alphaSlider = document.getElementById('alphaSlider')
noUiSlider.create(alphaSlider, {
    start: [.1],
    range: {
      'min': [.01],
      'max': [.5]
    }
  });
alphaSlider.noUiSlider.on('slide', update);
var alphaSliderValueElement = document.getElementById('alphaSlider-value');
alphaSlider.noUiSlider.on('update', function( values, handle ) {
  alphaSliderValueElement.innerHTML = 'alpha: '+values[handle];
});

function update() {

  d3.select("#hex").selectAll('svg').remove();
  d3.select("#scatter").selectAll('svg').remove();

  var n = nSlider.noUiSlider.get(),
      rad = radSlider.noUiSlider.get(),
      alpha = alphaSlider.noUiSlider.get();

  var randomX = d3.random.normal(width / 2, 80),
      randomY = d3.random.normal(height / 2, 80),
      points = d3.range(n).map(function() { return [randomX(), randomY()]; });

  var color = d3.scale.linear()
      .domain([0, 20])
      .range(["white", "steelblue"])
      .interpolate(d3.interpolateLab);

  var hexbin = d3.hexbin()
      .size([width, height])
      .radius(20);

  var x = d3.scale.identity()
      .domain([0, width]);

  var y = d3.scale.linear()
      .domain([0, height])
      .range([height, 0]);

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom")
      .tickSize(6, -height);

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .tickSize(6, -width);

  var svg = d3.select("#hex").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  svg.append("clipPath")
      .attr("id", "clip")
    .append("rect")
      .attr("class", "mesh")
      .attr("width", width)
      .attr("height", height);

  svg.append("g")
      .attr("clip-path", "url(#clip)")
    .selectAll(".hexagon")
      .data(hexbin(points))
    .enter().append("path")
      .attr("class", "hexagon")
      .attr("d", hexbin.hexagon())
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
      .style("fill", function(d) { return color(d.length); });

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

 

  var svg = d3.select("#scatter").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  svg.append("clipPath")
      .attr("id", "clip")
    .append("rect")
      .attr("class", "mesh")
      .attr("width", width)
      .attr("height", height);

  svg.append("g")
    .selectAll(".hexagon")
      .data(points)
    .enter().append("circle")
      .attr("r", 3)
      .attr("cx", function(d) {return d[0]})
      .attr("cy", function(d) {return d[1]})
      .style("fill", function(d) { return "rgba(0,0,0," + alpha + ")"; });

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);}

update();

</script>
